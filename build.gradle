plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:3.4.4")
    compileOnly("org.projectlombok:lombok:1.18.38")
    implementation("org.mapstruct:mapstruct:1.6.3")
    implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
    implementation("org.mapstruct:mapstruct-processor:1.6.3")
    implementation("org.postgresql:postgresql:42.7.5")
    implementation("org.liquibase:liquibase-core:4.31.1")
    implementation("org.springframework.boot:spring-boot-starter-web:3.4.4")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.4.4")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.4.4")
    testImplementation("org.mockito.kotlin:mockito-kotlin:5.4.0")
    runtimeOnly("org.jetbrains.kotlin:kotlin-reflect:2.1.20")
}

test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}